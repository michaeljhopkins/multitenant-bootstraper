<?php namespace $NAMESPACE_CONTROLLER$;

use $NAMESPACE_REQUEST$;
use $NAMESPACE_REQUEST$\Create$MODEL_NAME$Request;
use $NAMESPACE_REQUEST$\Update$MODEL_NAME$Request;
use $NAMESPACE_SERVICE$\$MODEL_NAME$Service;
use $BASE_CONTROLLER$ as BaseController;
use Flash;

class $MODEL_NAME$Controller extends BaseController
{

    /**
     * @var  $MODEL_NAME$Service
     */
    private $$MODEL_NAME_CAMEL$Service;

    function __construct($MODEL_NAME$Service $$MODEL_NAME_CAMEL$Service)
    {
        $this->$MODEL_NAME_CAMEL$Service = $$MODEL_NAME_CAMEL$Service;
    }

    /**
     * Display a listing of the $MODEL_NAME$.
     *
     * @return Response
     */
    public function index()
    {
        $$MODEL_NAME_PLURAL_CAMEL$ = $this->$MODEL_NAME_CAMEL$Service->$RENDER_TYPE$;

        return view('$VIEW_PATH$$VIEW_FOLDER_NAME$.index')->with(compact('$MODEL_NAME_PLURAL_CAMEL$'));
    }

    /**
     * Show the form for creating a new $MODEL_NAME$.
     *
     * @return Response
     */
    public function create()
    {
        return view('$VIEW_PATH$$VIEW_FOLDER_NAME$.create');
    }

    /**
     * Store a newly created $MODEL_NAME$ in storage.
     *
     * @param Create$MODEL_NAME$Request $request
     *
     * @return Response
     */
    public function store(Create$MODEL_NAME$Request $request)
    {
        $input = $request->all();

        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Service->create($input);

        Flash::success($MESSAGE_STORE$);

        return redirect(route('$ROUTE_PREFIX$$RESOURCE_URL$.index'));
    }

    /**
     * Display the specified $MODEL_NAME$.
     *
     * @param  int $id
     *
     * @return Response
     */
    public function show($id)
    {
        $$MODEL_NAME_CAMEL$ = $this->exist($id);

        return view('$VIEW_PATH$$VIEW_FOLDER_NAME$.show')->with(compact('$MODEL_NAME_CAMEL$'));
    }

    /**
     * Show the form for editing the specified $MODEL_NAME$.
     *
     * @param  int $id
     *
     * @return Response
     */
    public function edit($id)
    {
        $$MODEL_NAME_CAMEL$ = $this->exist($id);

        return view('$VIEW_PATH$$VIEW_FOLDER_NAME$.edit')->with(compact('$MODEL_NAME_CAMEL$'));
    }

    /**
     * Update the specified $MODEL_NAME$ in storage.
     *
     * @param int $id
     * @param Update$MODEL_NAME$Request $request
     *
     * @return Response
     */
    public function update($id, Update$MODEL_NAME$Request $request)
    {
        $this->exist($id);

        $this->$MODEL_NAME_CAMEL$Service->update($id, $request->all());

        Flash::success($MESSAGE_UPDATE$);

        return redirect(route('$ROUTE_PREFIX$$RESOURCE_URL$.index'));
    }

    /**
     * Remove the specified $MODEL_NAME$ from storage.
     *
     * @param  int $id
     *
     * @return Response
     */
    public function destroy($id)
    {
        $this->exist($id);

        $this->$MODEL_NAME_CAMEL$Service->delete($id);

        Flash::success($MESSAGE_DELETE$);

        return redirect(route('$ROUTE_PREFIX$$RESOURCE_URL$.index'));
    }

    /**
     * check if a record exist
     *
     * @param  int $id
     * @return Eloquent
     */
    private function exist($id)
    {
        try {
            $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Service->findOrFail($id);
        } catch(ModelNotFoundException $e) {
            Flash::error($MESSAGE_NOT_FOUND$);

            return redirect(route('$ROUTE_PREFIX$$RESOURCE_URL$.index'));
        }

        return $$MODEL_NAME_CAMEL$;
    }
}
